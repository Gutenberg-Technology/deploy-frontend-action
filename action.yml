name: 'Deploy frontend app to S3'
description: 'Deploy frontend app reusable action'
author: 'Gutenberg Technology'


inputs:
  invalidation-path:
    type: string
    description: "Path to invalidate on CloudFront"
    default: "/*"
    required: false
  folder-to-upload:
    description: 'Folder to upload in the artifact'
    required: true
  aws-region:
    description: 'AWS region'
    required: true
    default: 'us-east-1'
  aws-access-key-id:
    description: 'AWS access key id'
    required: true  
  aws-secret-access-key:
    description: 'AWS secret access key'
    required: true
  aws-bucket-name:
    description: 'S3 bucket name'
    required: true
  aws-cloudfront-distribution-id:
    description: 'Cloudfront distribution id'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Configure AWS credentials
      id: aws-credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}

    - name: List files
      run: pwd && tree -Lah 4
      shell: bash

    - name: Sync to S3
      run: |
        aws s3 sync ${{ inputs.folder-to-upload }} s3://${{ inputs.aws-bucket-name }} --delete --region ${{ inputs.aws-region }}
      shell: bash

    - name: Stop if sync failed
      run: |
        if [ $? -ne 0 ]; then
          echo "Sync failed"
          exit 1
        fi
      shell: bash

    - name: Creation Invalidation
      id: create_invalidation_id
      run: |
        INVALIDATION_ID=$(aws cloudfront create-invalidation --distribution-id ${{ inputs.aws-cloudfront-distribution-id }} --paths "${{ inputs.invalidation-path }}" | jq '.Invalidation.Id')
        echo "INVALIDATION_ID=$INVALIDATION_ID" >> $GITHUB_ENV
      shell: bash

    - name: Wait Invalidation status
      id: wait_invalidation_status
      run: aws cloudfront wait invalidation-completed --distribution-id ${{ inputs.aws-cloudfront-distribution-id }} --id ${{ env.INVALIDATION_ID }}
      shell: bash

    - name: Check Invalidation status
      run: |
        INVALIDATION_STATUS=$(aws cloudfront get-invalidation --distribution-id ${{ inputs.aws-cloudfront-distribution-id }} --id ${{ env.INVALIDATION_ID }} | jq '.Invalidation.Status')
        echo "INVALIDATION_STATUS=$INVALIDATION_STATUS" >> $GITHUB_ENV
      shell: bash
    
    - name: Use INVALIDATION_STATUS
      run: echo "Invalidation status is ${{ env.INVALIDATION_STATUS }}"
      shell: bash